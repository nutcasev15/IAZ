# Integrated App Zipper
# Environment Variables
DEVICE_MODEL=<yourmodel>
ROM=<yourrom>
BREAKFAST=n
JBS=16
DATE=$(date +"%m%d%Y")
SYSDIR="$(find out -type d -name "system" | grep $DEVICE_MODEL)"
JAVADIR="$(find out -type d -name "JAVA_LIBRARIES")"
# Pass 'pack' to Script for Zipping only
# Begin

# Packing Method
pack(){
SYSDIR="$(find out -type d -name "system" | grep $DEVICE_MODEL)"
sudo cp -ar $SYSDIR/app tools/IAZ/packaging/system/app
sudo cp -ar $SYSDIR/priv-app tools/IAZ/packaging/system/priv-app
cd tools/IAZ/packaging
sudo chmod -R 644 system
sudo find . -type f -exec zip "$ROM"_AppSuite_"$DATE".zip {} +
cd ../../..
sudo mv tools/IAZ/packaging/"$ROM"_AppSuite_"$DATE".zip ../"$ROM"_AppSuite_"$DATE".zip
rm -rf tools/IAZ/packaging
unset SYSDIR
}

# App Build Lists
AOSPAPPS="<insert aosp apps here>"
ROMAPPS="<insert rom specific apps here>"

# Da Script
printf "######### Command Acknowledged #########\n"
if [[ "$1" != "pack" ]]
then
	printf "\n######### Setting Up Environtment #########\n"
	if [[ "$JAVADIR" != "" ]]
	then
	rm -rf $SYSDIR\*app
	elif [[ -e out/syncsave ]]
	then
	rm -rf out/target
	printf "\n######### Ready #########\n"
	else
	repo sync -qj$JBS
	echo 1 > out/syncsave
	make clean
	printf "\n######### Done Syncing #########\n"
	fi
	. build/envsetup.sh
	if [[ "$BREAKFAST" == "n" ]]
	then
		lunch $DEVICE_MODEL
	else
		breakfast $DEVICE_MODEL
	fi

	mka -j$JBS \
	$AOSPAPPS \
	$ROMAPPS
	printf "\n######### Apps Compiled #########\n"
	pack
	printf "\n######### Zip Compiled #########\n"
else
	pack
	printf "\n######### Zip Compiled #########\n"
fi

unset DEVICE_MODEL ROM BREAKFAST JBS DATE AOSPAPPS ROMAPPS JAVADIR SYSDIR
# End
